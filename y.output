Nonterminals useless in grammar

   ExprStmt
   Expr
   AssignExpr
   AssignOp
   ConditionalExpr
   LogicalOrExpr
   LogicalAndExpr
   EqualExpr
   RelationalExpr
   AddExpr
   MultExpr
   UnaryExpr
   UnaryOp
   PostfixExpr
   PrimExpr
   SelectionStmt
   SelectionRestStmt
   StmtWithScope
   SwitchStmt
   SwitchStmtList
   CaseLabel
   IterStmt
   StmtNoNewScope
   Condition
   Initializer
   ForInitStmt
   ForRestStmt
   Conditionopt


Terminals unused in grammar

   T_LessEqual
   T_GreaterEqual
   T_Equal
   T_NotEqual
   T_Dims
   T_AndOp
   T_OrOp
   T_While
   T_For
   T_If
   T_Else
   T_Return
   T_Break
   T_Inc
   T_Dec
   T_Switch
   T_Case
   T_Default
   T_Dot
   T_FieldSelection
   T_Continue
   T_Colon
   T_AddAssign
   T_MulAssign
   T_DivAssign
   T_SubAssign
   T_Plus
   T_Dash
   T_Star
   T_Slash
   T_EqualOp
   T_LeftAngle
   T_RightAngle
   NO_ELSE
   T_IntConstant
   T_FloatConstant
   T_BoolConstant
   ";"


Rules useless in grammar

   32 ExprStmt: T_Semicolon
   33         | Expr T_Semicolon

   34 Expr: AssignExpr

   35 AssignExpr: ConditionalExpr
   36           | UnaryExpr AssignOp AssignExpr

   37 AssignOp: T_Equal
   38         | T_MulAssign
   39         | T_DivAssign
   40         | T_AddAssign
   41         | T_SubAssign

   42 ConditionalExpr: LogicalOrExpr

   43 LogicalOrExpr: LogicalAndExpr
   44              | LogicalOrExpr T_OrOp LogicalAndExpr

   45 LogicalAndExpr: EqualExpr
   46               | LogicalAndExpr T_AndOp EqualExpr

   47 EqualExpr: RelationalExpr
   48          | EqualExpr T_EqualOp RelationalExpr
   49          | EqualExpr T_NotEqual RelationalExpr

   50 RelationalExpr: AddExpr
   51               | RelationalExpr T_LeftAngle AddExpr
   52               | RelationalExpr T_RightAngle AddExpr
   53               | RelationalExpr T_LessEqual AddExpr
   54               | RelationalExpr T_GreaterEqual AddExpr

   55 AddExpr: MultExpr
   56        | AddExpr T_Plus MultExpr
   57        | AddExpr T_Dash MultExpr

   58 MultExpr: UnaryExpr
   59         | MultExpr T_Star UnaryExpr
   60         | MultExpr T_Slash UnaryExpr

   61 UnaryExpr: PostfixExpr
   62          | T_Inc UnaryExpr
   63          | T_Dec UnaryExpr
   64          | UnaryOp UnaryExpr

   65 UnaryOp: T_Plus
   66        | T_Dash

   67 PostfixExpr: PrimExpr
   68            | PostfixExpr T_Dot T_FieldSelection
   69            | PostfixExpr T_Inc
   70            | PostfixExpr T_Dec

   71 PrimExpr: T_Identifier
   72         | T_IntConstant
   73         | T_FloatConstant
   74         | T_BoolConstant
   75         | T_LeftParen Expr T_RightParen

   76 SelectionStmt: T_If T_LeftParen Expr T_RightParen SelectionRestStmt

   77 SelectionRestStmt: StmtWithScope T_Else StmtWithScope

   78 StmtWithScope: CompoundStmtNoNewScope
   79              | SimpleStmt

   80 SwitchStmt: T_Switch T_LeftParen Expr T_RightParen T_LeftBrace SwitchStmtList T_RightBrace

   81 SwitchStmtList: StmtList
   82               | ";"

   83 CaseLabel: T_Case Expr T_Colon
   84          | T_Default T_Colon

   85 IterStmt: T_While T_LeftParen Condition T_RightParen StmtNoNewScope
   86         | T_For T_LeftParen ForInitStmt ForRestStmt T_RightParen StmtNoNewScope

   87 StmtNoNewScope: CompoundStmtNoNewScope
   88               | SimpleStmt

   89 Condition: Expr
   90          | TypeSpecifier T_Identifier T_Equal Initializer

   91 Initializer: AssignExpr

   92 ForInitStmt: ExprStmt
   93            | VarDecl

   94 ForRestStmt: Conditionopt T_Semicolon
   95            | Conditionopt T_Semicolon Expr

   96 Conditionopt: Condition
   97             | ";"


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: DeclList Decl
    3         | Decl

    4 Decl: FnDef
    5     | VarDecl

    6 FnDef: FnPrototype CompoundStmtNoNewScope

    7 CompoundStmtNoNewScope: T_LeftBrace T_RightBrace
    8                       | T_LeftBrace StmtList T_RightBrace

    9 StmtList: Stmt

   10 Stmt: SimpleStmt

   11 SimpleStmt: VarDecl

   12 VarDecl: FnPrototype T_Semicolon
   13        | TypeSpecifier T_Identifier T_Semicolon

   14 TypeSpecifier: T_Void
   15              | T_Bool
   16              | T_Float
   17              | T_Int
   18              | T_Vec2
   19              | T_Vec3
   20              | T_Vec4
   21              | T_Mat2
   22              | T_Mat3
   23              | T_Mat4

   24 FnPrototype: FnDeclarator T_RightParen

   25 FnDeclarator: FnHeader
   26             | FnHeaderWithParameters

   27 FnHeaderWithParameters: FnHeader ParameterDecl
   28                       | FnHeaderWithParameters T_Comma ParameterDecl

   29 FnHeader: TypeSpecifier T_Identifier T_LeftParen

   30 ParameterDecl: TypeSpecifier T_Identifier
   31              | TypeSpecifier


Terminals, with rules where they appear

$end (0) 0
error (256)
T_Void (258) 14
T_Bool (259) 15
T_Int (260) 17
T_Float (261) 16
T_LessEqual (262)
T_GreaterEqual (263)
T_Equal (264)
T_NotEqual (265)
T_Dims (266)
T_AndOp (267)
T_OrOp (268)
T_While (269)
T_For (270)
T_If (271)
T_Else (272)
T_Return (273)
T_Break (274)
T_Inc (275)
T_Dec (276)
T_Switch (277)
T_Case (278)
T_Default (279)
T_LeftParen (280) 29
T_RightParen (281) 24
T_Dot (282)
T_FieldSelection (283)
T_Vec2 (284) 18
T_Vec3 (285) 19
T_Vec4 (286) 20
T_Mat2 (287) 21
T_Mat3 (288) 22
T_Mat4 (289) 23
T_Continue (290)
T_Semicolon (291) 12 13
T_Colon (292)
T_Comma (293) 28
T_AddAssign (294)
T_MulAssign (295)
T_DivAssign (296)
T_SubAssign (297)
T_LeftBrace (298) 7 8
T_RightBrace (299) 7 8
T_Plus (300)
T_Dash (301)
T_Star (302)
T_Slash (303)
T_EqualOp (304)
T_LeftAngle (305)
T_RightAngle (306)
NO_ELSE (307)
T_Identifier (308) 13 29 30
T_IntConstant (309)
T_FloatConstant (310)
T_BoolConstant (311)
";" (312)


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
Program (59)
    on left: 1, on right: 0
DeclList (60)
    on left: 2 3, on right: 1 2
Decl (61)
    on left: 4 5, on right: 2 3
FnDef (62)
    on left: 6, on right: 4
CompoundStmtNoNewScope (63)
    on left: 7 8, on right: 6
StmtList (64)
    on left: 9, on right: 8
Stmt (65)
    on left: 10, on right: 9
SimpleStmt (66)
    on left: 11, on right: 10
VarDecl (67)
    on left: 12 13, on right: 5 11
TypeSpecifier (68)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 13 29 30 31
FnPrototype (69)
    on left: 24, on right: 6 12
FnDeclarator (70)
    on left: 25 26, on right: 24
FnHeaderWithParameters (71)
    on left: 27 28, on right: 26 28
FnHeader (72)
    on left: 29, on right: 25 27
ParameterDecl (73)
    on left: 30 31, on right: 27 28


state 0

    0 $accept: . Program $end

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Int    shift, and go to state 3
    T_Float  shift, and go to state 4
    T_Vec2   shift, and go to state 5
    T_Vec3   shift, and go to state 6
    T_Vec4   shift, and go to state 7
    T_Mat2   shift, and go to state 8
    T_Mat3   shift, and go to state 9
    T_Mat4   shift, and go to state 10

    Program                 go to state 11
    DeclList                go to state 12
    Decl                    go to state 13
    FnDef                   go to state 14
    VarDecl                 go to state 15
    TypeSpecifier           go to state 16
    FnPrototype             go to state 17
    FnDeclarator            go to state 18
    FnHeaderWithParameters  go to state 19
    FnHeader                go to state 20


state 1

   14 TypeSpecifier: T_Void .

    $default  reduce using rule 14 (TypeSpecifier)


state 2

   15 TypeSpecifier: T_Bool .

    $default  reduce using rule 15 (TypeSpecifier)


state 3

   17 TypeSpecifier: T_Int .

    $default  reduce using rule 17 (TypeSpecifier)


state 4

   16 TypeSpecifier: T_Float .

    $default  reduce using rule 16 (TypeSpecifier)


state 5

   18 TypeSpecifier: T_Vec2 .

    $default  reduce using rule 18 (TypeSpecifier)


state 6

   19 TypeSpecifier: T_Vec3 .

    $default  reduce using rule 19 (TypeSpecifier)


state 7

   20 TypeSpecifier: T_Vec4 .

    $default  reduce using rule 20 (TypeSpecifier)


state 8

   21 TypeSpecifier: T_Mat2 .

    $default  reduce using rule 21 (TypeSpecifier)


state 9

   22 TypeSpecifier: T_Mat3 .

    $default  reduce using rule 22 (TypeSpecifier)


state 10

   23 TypeSpecifier: T_Mat4 .

    $default  reduce using rule 23 (TypeSpecifier)


state 11

    0 $accept: Program . $end

    $end  shift, and go to state 21


state 12

    1 Program: DeclList .
    2 DeclList: DeclList . Decl

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Int    shift, and go to state 3
    T_Float  shift, and go to state 4
    T_Vec2   shift, and go to state 5
    T_Vec3   shift, and go to state 6
    T_Vec4   shift, and go to state 7
    T_Mat2   shift, and go to state 8
    T_Mat3   shift, and go to state 9
    T_Mat4   shift, and go to state 10

    $default  reduce using rule 1 (Program)

    Decl                    go to state 22
    FnDef                   go to state 14
    VarDecl                 go to state 15
    TypeSpecifier           go to state 16
    FnPrototype             go to state 17
    FnDeclarator            go to state 18
    FnHeaderWithParameters  go to state 19
    FnHeader                go to state 20


state 13

    3 DeclList: Decl .

    $default  reduce using rule 3 (DeclList)


state 14

    4 Decl: FnDef .

    $default  reduce using rule 4 (Decl)


state 15

    5 Decl: VarDecl .

    $default  reduce using rule 5 (Decl)


state 16

   13 VarDecl: TypeSpecifier . T_Identifier T_Semicolon
   29 FnHeader: TypeSpecifier . T_Identifier T_LeftParen

    T_Identifier  shift, and go to state 23


state 17

    6 FnDef: FnPrototype . CompoundStmtNoNewScope
   12 VarDecl: FnPrototype . T_Semicolon

    T_Semicolon  shift, and go to state 24
    T_LeftBrace  shift, and go to state 25

    CompoundStmtNoNewScope  go to state 26


state 18

   24 FnPrototype: FnDeclarator . T_RightParen

    T_RightParen  shift, and go to state 27


state 19

   26 FnDeclarator: FnHeaderWithParameters .
   28 FnHeaderWithParameters: FnHeaderWithParameters . T_Comma ParameterDecl

    T_Comma  shift, and go to state 28

    $default  reduce using rule 26 (FnDeclarator)


state 20

   25 FnDeclarator: FnHeader .
   27 FnHeaderWithParameters: FnHeader . ParameterDecl

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Int    shift, and go to state 3
    T_Float  shift, and go to state 4
    T_Vec2   shift, and go to state 5
    T_Vec3   shift, and go to state 6
    T_Vec4   shift, and go to state 7
    T_Mat2   shift, and go to state 8
    T_Mat3   shift, and go to state 9
    T_Mat4   shift, and go to state 10

    $default  reduce using rule 25 (FnDeclarator)

    TypeSpecifier  go to state 29
    ParameterDecl  go to state 30


state 21

    0 $accept: Program $end .

    $default  accept


state 22

    2 DeclList: DeclList Decl .

    $default  reduce using rule 2 (DeclList)


state 23

   13 VarDecl: TypeSpecifier T_Identifier . T_Semicolon
   29 FnHeader: TypeSpecifier T_Identifier . T_LeftParen

    T_LeftParen  shift, and go to state 31
    T_Semicolon  shift, and go to state 32


state 24

   12 VarDecl: FnPrototype T_Semicolon .

    $default  reduce using rule 12 (VarDecl)


state 25

    7 CompoundStmtNoNewScope: T_LeftBrace . T_RightBrace
    8                       | T_LeftBrace . StmtList T_RightBrace

    T_Void        shift, and go to state 1
    T_Bool        shift, and go to state 2
    T_Int         shift, and go to state 3
    T_Float       shift, and go to state 4
    T_Vec2        shift, and go to state 5
    T_Vec3        shift, and go to state 6
    T_Vec4        shift, and go to state 7
    T_Mat2        shift, and go to state 8
    T_Mat3        shift, and go to state 9
    T_Mat4        shift, and go to state 10
    T_RightBrace  shift, and go to state 33

    StmtList                go to state 34
    Stmt                    go to state 35
    SimpleStmt              go to state 36
    VarDecl                 go to state 37
    TypeSpecifier           go to state 16
    FnPrototype             go to state 38
    FnDeclarator            go to state 18
    FnHeaderWithParameters  go to state 19
    FnHeader                go to state 20


state 26

    6 FnDef: FnPrototype CompoundStmtNoNewScope .

    $default  reduce using rule 6 (FnDef)


state 27

   24 FnPrototype: FnDeclarator T_RightParen .

    $default  reduce using rule 24 (FnPrototype)


state 28

   28 FnHeaderWithParameters: FnHeaderWithParameters T_Comma . ParameterDecl

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Int    shift, and go to state 3
    T_Float  shift, and go to state 4
    T_Vec2   shift, and go to state 5
    T_Vec3   shift, and go to state 6
    T_Vec4   shift, and go to state 7
    T_Mat2   shift, and go to state 8
    T_Mat3   shift, and go to state 9
    T_Mat4   shift, and go to state 10

    TypeSpecifier  go to state 29
    ParameterDecl  go to state 39


state 29

   30 ParameterDecl: TypeSpecifier . T_Identifier
   31              | TypeSpecifier .

    T_Identifier  shift, and go to state 40

    $default  reduce using rule 31 (ParameterDecl)


state 30

   27 FnHeaderWithParameters: FnHeader ParameterDecl .

    $default  reduce using rule 27 (FnHeaderWithParameters)


state 31

   29 FnHeader: TypeSpecifier T_Identifier T_LeftParen .

    $default  reduce using rule 29 (FnHeader)


state 32

   13 VarDecl: TypeSpecifier T_Identifier T_Semicolon .

    $default  reduce using rule 13 (VarDecl)


state 33

    7 CompoundStmtNoNewScope: T_LeftBrace T_RightBrace .

    $default  reduce using rule 7 (CompoundStmtNoNewScope)


state 34

    8 CompoundStmtNoNewScope: T_LeftBrace StmtList . T_RightBrace

    T_RightBrace  shift, and go to state 41


state 35

    9 StmtList: Stmt .

    $default  reduce using rule 9 (StmtList)


state 36

   10 Stmt: SimpleStmt .

    $default  reduce using rule 10 (Stmt)


state 37

   11 SimpleStmt: VarDecl .

    $default  reduce using rule 11 (SimpleStmt)


state 38

   12 VarDecl: FnPrototype . T_Semicolon

    T_Semicolon  shift, and go to state 24


state 39

   28 FnHeaderWithParameters: FnHeaderWithParameters T_Comma ParameterDecl .

    $default  reduce using rule 28 (FnHeaderWithParameters)


state 40

   30 ParameterDecl: TypeSpecifier T_Identifier .

    $default  reduce using rule 30 (ParameterDecl)


state 41

    8 CompoundStmtNoNewScope: T_LeftBrace StmtList T_RightBrace .

    $default  reduce using rule 8 (CompoundStmtNoNewScope)
