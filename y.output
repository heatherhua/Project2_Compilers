Terminals unused in grammar

   T_Void
   T_Bool
   T_Int
   T_Float
   T_LessEqual
   T_GreaterEqual
   T_Equal
   T_NotEqual
   T_Dims
   T_And
   T_Or
   T_While
   T_For
   T_If
   T_Else
   T_Return
   T_Break
   T_Inc
   T_Dec
   T_Switch
   T_Case
   T_Default
   T_LeftParen
   T_RightParen
   T_LeftBracket
   T_RightBracket


Rules useless in parser due to conflicts

    7 PrimExpr: VarIdent


State 8 conflicts: 5 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: DeclList Decl
    3         | Decl

    4 Decl: VarIdent
    5     | PrimExpr

    6 VarIdent: T_Identifier

    7 PrimExpr: VarIdent
    8         | T_IntConstant
    9         | T_FloatConstant
   10         | T_BoolConstant


Terminals, with rules where they appear

$end (0) 0
error (256)
T_Void (258)
T_Bool (259)
T_Int (260)
T_Float (261)
T_LessEqual (262)
T_GreaterEqual (263)
T_Equal (264)
T_NotEqual (265)
T_Dims (266)
T_And (267)
T_Or (268)
T_While (269)
T_For (270)
T_If (271)
T_Else (272)
T_Return (273)
T_Break (274)
T_Inc (275)
T_Dec (276)
T_Switch (277)
T_Case (278)
T_Default (279)
T_LeftParen (280)
T_RightParen (281)
T_LeftBracket (282)
T_RightBracket (283)
T_Identifier (284) 6
T_IntConstant (285) 8
T_FloatConstant (286) 9
T_BoolConstant (287) 10


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
Program (34)
    on left: 1, on right: 0
DeclList (35)
    on left: 2 3, on right: 1 2
Decl (36)
    on left: 4 5, on right: 2 3
VarIdent (37)
    on left: 6, on right: 4 7
PrimExpr (38)
    on left: 7 8 9 10, on right: 5


state 0

    0 $accept: . Program $end

    T_Identifier     shift, and go to state 1
    T_IntConstant    shift, and go to state 2
    T_FloatConstant  shift, and go to state 3
    T_BoolConstant   shift, and go to state 4

    Program   go to state 5
    DeclList  go to state 6
    Decl      go to state 7
    VarIdent  go to state 8
    PrimExpr  go to state 9


state 1

    6 VarIdent: T_Identifier .

    $default  reduce using rule 6 (VarIdent)


state 2

    8 PrimExpr: T_IntConstant .

    $default  reduce using rule 8 (PrimExpr)


state 3

    9 PrimExpr: T_FloatConstant .

    $default  reduce using rule 9 (PrimExpr)


state 4

   10 PrimExpr: T_BoolConstant .

    $default  reduce using rule 10 (PrimExpr)


state 5

    0 $accept: Program . $end

    $end  shift, and go to state 10


state 6

    1 Program: DeclList .
    2 DeclList: DeclList . Decl

    T_Identifier     shift, and go to state 1
    T_IntConstant    shift, and go to state 2
    T_FloatConstant  shift, and go to state 3
    T_BoolConstant   shift, and go to state 4

    $default  reduce using rule 1 (Program)

    Decl      go to state 11
    VarIdent  go to state 8
    PrimExpr  go to state 9


state 7

    3 DeclList: Decl .

    $default  reduce using rule 3 (DeclList)


state 8

    4 Decl: VarIdent .
    7 PrimExpr: VarIdent .

    $end             reduce using rule 4 (Decl)
    $end             [reduce using rule 7 (PrimExpr)]
    T_Identifier     reduce using rule 4 (Decl)
    T_Identifier     [reduce using rule 7 (PrimExpr)]
    T_IntConstant    reduce using rule 4 (Decl)
    T_IntConstant    [reduce using rule 7 (PrimExpr)]
    T_FloatConstant  reduce using rule 4 (Decl)
    T_FloatConstant  [reduce using rule 7 (PrimExpr)]
    T_BoolConstant   reduce using rule 4 (Decl)
    T_BoolConstant   [reduce using rule 7 (PrimExpr)]
    $default         reduce using rule 4 (Decl)


state 9

    5 Decl: PrimExpr .

    $default  reduce using rule 5 (Decl)


state 10

    0 $accept: Program $end .

    $default  accept


state 11

    2 DeclList: DeclList Decl .

    $default  reduce using rule 2 (DeclList)
